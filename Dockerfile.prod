# -------- Builder Stage --------
    FROM python:3.11-slim AS builder

    WORKDIR /app
    
    # Sistem paketlerini yükle + temizle
    RUN apt-get update && \
        apt-get install -y --no-install-recommends build-essential gcc curl && \
        apt-get purge -y --auto-remove && \
        rm -rf /var/lib/apt/lists/*
    
    # Sanal ortam kur
    RUN python -m venv /opt/venv
    ENV PATH="/opt/venv/bin:$PATH"
    
    # Bağımlılıkları yükle
    COPY requirements.prod.txt .
    RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
        pip install --no-cache-dir --no-deps -r requirements.prod.txt

    
    # -------- Runtime Stage --------
    FROM python:3.11-slim
    
    WORKDIR /app
    
    # Sanal ortamı taşı
    COPY --from=builder /opt/venv /opt/venv
    ENV PATH="/opt/venv/bin:$PATH"
    
    # Hafif sistem paketleri (yalnızca runtime)
    RUN apt-get update && \
        apt-get install -y --no-install-recommends curl && \
        apt-get purge -y --auto-remove && \
        rm -rf /var/lib/apt/lists/*
    
    # Kullanıcı oluştur
    RUN useradd -m -d /app microbot
    
    # Dizin ve izinler
    RUN mkdir -p /app/logs /app/backups /app/static && \
        chown -R microbot:microbot /app
    
    # Uygulama dosyalarını kopyala
    COPY --chown=microbot:microbot . .
    
    # Kullanıcıya geçiş
    USER microbot
    
    # Sağlık kontrolü (Docker Compose tarafından tanımlanabilir)
    HEALTHCHECK CMD curl -f http://localhost:8000/health || exit 1
    
    # Başlatma komutu
    CMD ["gunicorn", "app.main:app", "--workers", "4", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000"]
    