name: MicroBot CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test ve Linting
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: microbot
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: microbot_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Python Kurulumu
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Bağımlılıkların Yüklenmesi
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black isort
    
    - name: Kod Biçimlendirme Kontrolü
      run: |
        black --check app/
        isort --check app/
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Testlerin Çalıştırılması
      run: |
        pytest app/tests/ --cov=app --cov-report=xml
      env:
        DATABASE_URL: postgresql://microbot:testpassword@localhost:5432/microbot_test
        SECRET_KEY: test_secret_key
    
    - name: Test Sonuçlarını Yükleme
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: coverage.xml
  
  build:
    name: Docker İmajı Oluşturma
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/microbot
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=ref,event=branch
          type=sha
    
    - name: Docker Hub'a Giriş
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Docker Build ve Push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Sunucu Bağlantısı
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /path/to/microbot
          git pull origin main
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d
          docker system prune -af --volumes 