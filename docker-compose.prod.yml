version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env.prod
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./static:/app/static
    networks:
      - microbot_network
    ports:
      - "8000:8000"

  db:
    image: postgres:15
    restart: always
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microbot_network

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - microbot_network

  nginx:
    image: nginx:1.25-alpine
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod:/etc/nginx/conf.d
      - ./static:/usr/share/nginx/html/static
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - microbot_network

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  redis_data:

networks:
  microbot_network:
    driver: bridge
